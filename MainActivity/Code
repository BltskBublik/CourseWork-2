package com.example.hydroponicapp

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.example.hydroponicapp.ui.theme.HydroponicAppTheme

// ----------------------- DATA MODELS ----------------------------

/**
 * Описание компонента удобрений:
 *  - [name]: название (NPK 10-5-5, Микроэлементы и т.д.)
 *  - [dosage]: дозировка (например, "10 мл/л")
 */
data class FertilizerComponent(
    val name: String,
    val dosage: String
)

/**
 * Описание стадии развития растения:
 *  - [name]: название стадии (Вегетация, Цветение, Плодоношение и т.д.)
 *  - [components]: список необходимых удобрений и их дозировок
 */
data class Stage(
    val name: String,
    val components: List<FertilizerComponent>
)

/**
 * Описание растения:
 *  - [id]: уникальный идентификатор
 *  - [name]: название растения (Перец, Арбуз, Клубника, и т.д.)
 *  - [stages]: список стадий, каждая со своими удобрениями
 */
data class Plant(
    val id: Int,
    val name: String,
    val stages: List<Stage>
)

// ------------------- SAMPLE DATA ---------------------

/**
 * Список растений для примера.
 * В реальном приложении здесь может быть больше растений.
 */
val samplePlants = listOf(
    Plant(
        id = 0,
        name = "Перец",
        stages = listOf(
            Stage(
                name = "Вегетация",
                components = listOf(
                    FertilizerComponent("NPK 10-5-5", "10 мл/л"),
                    FertilizerComponent("Микроэлементы", "5 мл/л"),
                    FertilizerComponent("Кальций", "3 мл/л")
                )
            ),
            Stage(
                name = "Цветение",
                components = listOf(
                    FertilizerComponent("NPK 5-10-5", "7 мл/л"),
                    FertilizerComponent("Микроэлементы", "5 мл/л"),
                    FertilizerComponent("Магний", "2 мл/л")
                )
            ),
            Stage(
                name = "Плодоношение",
                components = listOf(
                    FertilizerComponent("NPK 5-5-10", "8 мл/л"),
                    FertilizerComponent("Микроэлементы", "4 мл/л"),
                    FertilizerComponent("Кальций", "2 мл/л")
                )
            )
        )
    ),
    Plant(
        id = 1,
        name = "Арбуз",
        stages = listOf(
            Stage(
                name = "Вегетация",
                components = listOf(
                    FertilizerComponent("NPK 12-5-8", "12 мл/л"),
                    FertilizerComponent("Железо", "3 мл/л")
                )
            ),
            Stage(
                name = "Цветение",
                components = listOf(
                    FertilizerComponent("NPK 7-9-5", "8 мл/л"),
                    FertilizerComponent("Кальций", "2 мл/л"),
                    FertilizerComponent("Сера", "2 мл/л")
                )
            ),
            Stage(
                name = "Плодоношение",
                components = listOf(
                    FertilizerComponent("NPK 5-5-10", "10 мл/л"),
                    FertilizerComponent("Микроэлементы", "2 мл/л")
                )
            )
        )
    ),
    Plant(
        id = 2,
        name = "Клубника",
        stages = listOf(
            Stage(
                name = "Вегетация",
                components = listOf(
                    FertilizerComponent("NPK 10-3-7", "8 мл/л"),
                    FertilizerComponent("Микроэлементы", "3 мл/л"),
                )
            ),
            Stage(
                name = "Цветение",
                components = listOf(
                    FertilizerComponent("NPK 5-8-7", "6 мл/л"),
                    FertilizerComponent("Кальций", "3 мл/л"),
                )
            ),
            Stage(
                name = "Плодоношение",
                components = listOf(
                    FertilizerComponent("NPK 3-5-10", "9 мл/л"),
                    FertilizerComponent("Железо", "2 мл/л")
                )
            )
        )
    ),
    // Добавим остальное по тому же принципу
)

// ------------------ MAIN ACTIVITY (входная точка) -------------------

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            HydroponicAppTheme {
                // Один Activity - несколько экранов: список и детальное описание
                MyHydroponicApp()
            }
        }
    }
}

// ------------------ APP COMPOSABLE -------------------------------

@Composable
fun MyHydroponicApp() {
    var selectedPlant by remember { mutableStateOf<Plant?>(null) }

    // Если растение ещё не выбрано - показываем список,
    // иначе показываем экран с информацией о выбранном растении.
    if (selectedPlant == null) {
        PlantListScreen(
            plants = samplePlants,
            onPlantSelected = { plant ->
                selectedPlant = plant
            }
        )
    } else {
        PlantDetailScreen(
            plant = selectedPlant!!,
            onBack = {
                // Возвращаемся к списку (сбрасываем выбранное растение)
                selectedPlant = null
            }
        )
    }
}

// ------------------ SCREEN: LIST OF PLANTS -----------------------

@Composable
fun PlantListScreen(
    plants: List<Plant>,
    onPlantSelected: (Plant) -> Unit
) {
    Scaffold(
        topBar = {
            TopAppBar(
                title = { Text("Выберите растение") }
            )
        }
    ) { innerPadding ->
        LazyColumn(
            modifier = Modifier
                .fillMaxSize()
                .padding(innerPadding)
        ) {
            items(plants) { plant ->
                PlantListItem(
                    plant = plant,
                    onClick = { onPlantSelected(plant) }
                )
            }
        }
    }
}

@Composable
fun PlantListItem(
    plant: Plant,
    onClick: () -> Unit
) {
    // Один элемент списка (карточка или просто строка)
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(horizontal = 8.dp, vertical = 4.dp)
            .clickable { onClick() },
    ) {
        Row(
            modifier = Modifier
                .padding(16.dp)
                .fillMaxWidth()
        ) {
            Text(text = plant.name)
        }
    }
}

// ------------------ SCREEN: DETAIL (STAGES) ----------------------

@Composable
fun PlantDetailScreen(
    plant: Plant,
    onBack: () -> Unit
) {
    // Храним индекс выбранной стадии
    var selectedStageIndex by remember { mutableStateOf(0) }

    val currentStage = plant.stages[selectedStageIndex]

    Scaffold(
        topBar = {
            TopAppBar(
                title = { Text(plant.name) },
                navigationIcon = {
                    IconButton(onClick = onBack) {
                        Icon(
                            // Material3 рекомендует Icons.Filled.ArrowBack (импортировать отдельно)
                            imageVector = androidx.compose.material.icons.Icons.Default.ArrowBack,
                            contentDescription = "Back"
                        )
                    }
                }
            )
        }
    ) { innerPadding ->
        Column(
            modifier = Modifier
                .padding(innerPadding)
                .fillMaxSize()
                .padding(16.dp)
        ) {
            // Блок переключения стадий (например, с помощью RadioButton)
            Text(text = "Выберите стадию развития:", style = MaterialTheme.typography.titleMedium)
            Spacer(modifier = Modifier.height(8.dp))
            plant.stages.forEachIndexed { index, stage ->
                Row(
                    verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier
                        .fillMaxWidth()
                        .clickable {
                            selectedStageIndex = index
                        }
                        .padding(vertical = 4.dp)
                ) {
                    RadioButton(
                        selected = (selectedStageIndex == index),
                        onClick = { selectedStageIndex = index }
                    )
                    Spacer(modifier = Modifier.width(8.dp))
                    Text(text = stage.name)
                }
            }

            Spacer(modifier = Modifier.height(16.dp))

            // Показ списка удобрений для текущей стадии
            Text(
                text = "Необходимые удобрения (${currentStage.name}):",
                style = MaterialTheme.typography.titleMedium
            )
            Spacer(modifier = Modifier.height(8.dp))

            currentStage.components.forEach { fertilizer ->
                Text(text = "• ${fertilizer.name}: ${fertilizer.dosage}")
            }
        }
    }
}

// ------------------ PREVIEWS (для Android Studio) ----------------

@Preview(showBackground = true)
@Composable
fun PreviewPlantListScreen() {
    HydroponicAppTheme {
        PlantListScreen(plants = samplePlants, onPlantSelected = {})
    }
}

@Preview(showBackground = true)
@Composable
fun PreviewPlantDetailScreen() {
    HydroponicAppTheme {
        PlantDetailScreen(plant = samplePlants[0], onBack = {})
    }
}
